name: Release App

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npx nextron build --win --${{ matrix.arch }}

      - name: Replace exe name space to underbar
        run: |
          Get-ChildItem -Path dist -Filter *.exe | ForEach-Object {
            $newName = $_.Name -replace ' ', '_'
            Rename-Item -Path $_.FullName -NewName $newName
          }

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{ matrix.arch }}
          path: dist/*.exe
      - name: create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npx nextron build --mac --universal

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-universal
          path: dist/*.dmg
      - name: create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # create-release:
  #   needs: [build-windows, build-macos]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: artifacts
  #     - name: Display structure of downloaded files
  #       run: |
  #         ls -R artifacts
  #         find $PWD/artifacts -type f

  #     - name: Create Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: |
  #           artifacts/windows-x64/*.exe
  #           artifacts/windows-arm64/*.exe
  #           artifacts/macos-universal/*.dmg
  #         draft: true
  #         prerelease: false
